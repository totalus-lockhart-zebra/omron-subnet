name: Security Baseline

on:
  pull_request: {}
  push:
    branches:
      - master
      - main

permissions:
  contents: read
  packages: write        # Required to push to GHCR
  pull-requests: write
  security-events: write

jobs:

  build-and-push:
    name: 🛠️ Build and Push Docker Image to GHCR
    runs-on: ubuntu-latest
    outputs:
      image_uri: ${{ steps.push.outputs.image_uri }}
    steps:
      - name: 📥 Checkout Repository Code
        uses: actions/checkout@v4

      - name: 🔐 Authenticate to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏗️ Build Docker Image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/$(basename ${{ github.repository }})
          docker build -t $IMAGE_NAME:${{ github.sha }} .

      - name: 🚀 Push Docker Image and Export Digest URI
        id: push
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/$(basename ${{ github.repository }})
          docker push $IMAGE_NAME:${{ github.sha }}
          DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $IMAGE_NAME:${{ github.sha }})
          echo "image_uri=$DIGEST" >> $GITHUB_OUTPUT

  snyk-pip:
    name: 🔍 Snyk Scan (requirements.txt - pip)
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Repository Code
        uses: actions/checkout@v4

      - name: 🧪 Run Snyk Scan for pip
        uses: snyk/actions/python-3.10@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --file=requirements.txt --package-manager=pip --sarif-file-output=snyk-pip.sarif --severity-threshold=high

      - name: ☁️ Upload SARIF Report (pip)
        if: success() || failure()  # Proceed even if snyk scan fails
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-pip.sarif

  snyk-poetry:
    name: 🔍 Snyk Scan (pyproject.toml - poetry)
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Repository Code
        uses: actions/checkout@v4

      - name: 🧪 Run Snyk Scan for poetry
        uses: snyk/actions/python-3.10@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --file=pyproject.toml --package-manager=poetry --sarif-file-output=snyk-poetry.sarif --severity-threshold=high

      - name: ☁️ Upload SARIF Report (poetry)
        if: success() || failure()  # Prevent fail if scan skips or errors
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-poetry.sarif

          
  gitleaks:
    name: 🔐 Gitleaks Secret Detection
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Repository Code
        uses: actions/checkout@v4

      - name: 🔍 Run Gitleaks to Detect Secrets in Git History
        uses: gitleaks/gitleaks-action@v2
        with:
          args: "detect --source=. --no-banner"
        continue-on-error: true

  trivy:
    name: 🧪 Trivy Image Vulnerability Scan
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Repository Code
        uses: actions/checkout@v4

      - name: 🔍 Scan Container Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ needs.build-and-push.outputs.image_uri }}
          ignore-unfixed: true
          severity: CRITICAL,HIGH
          format: sarif
          output: trivy.sarif
          exit-code: 0

      - name: ☁️ Upload Trivy SARIF Report to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy.sarif

  codeql:
    name: 🧠 CodeQL Static Analysis (Python)
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Repository Code
        uses: actions/checkout@v4

      - name: ⚙️ Initialize CodeQL for Python
        uses: github/codeql-action/init@v3
        with:
          languages: python

      - name: 📊 Analyze Code with CodeQL
        uses: github/codeql-action/analyze@v3
