name: Security Baseline

on:
  pull_request: {}      # Triggers on all PRs
  push:                 # Triggers on all pushes to any branch
    branches: ["**"]

permissions:
  contents: read
  pull-requests: write   # Required for commenting on PRs
  security-events: write # Required for uploading SARIF reports

jobs:
  snyk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: snyk/actions/setup@v4  # Correct usage

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python-3.10@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  gitleaks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: gitleaks/gitleaks-action@v2
        with:
          args: "detect --source=. --no-banner"
        continue-on-error: true  # Non-blocking leak detection

  # Uncomment to enable Docker Scout
  # scout:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_USER }}
  #         password: ${{ secrets.DOCKER_PAT }}
  #     - uses: docker/scout-action@v1
  #       if: github.event_name == 'pull_request'
  #       with:
  #         command: quickview,cves
  #         image: bittensor-subnet:${{ github.sha }}
  #         only-severities: critical,high
  #         github-token: ${{ secrets.GITHUB_TOKEN }}

  # Uncomment to enable Trivy
  # trivy:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: aquasecurity/trivy-action@v0.20
  #       with:
  #         image-ref: bittensor-subnet:${{ github.sha }}
  #         ignore-unfixed: true
  #         severity: CRITICAL,HIGH
  #         format: sarif
  #         output: trivy.sarif
  #         exit-code: 0
  #     - uses: github/codeql-action/upload-sarif@v3
  #       with:
  #         sarif_file: trivy.sarif

  # Uncomment to enable CodeQL (Python example)
  # codeql:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: github/codeql-action/init@v3
  #       with:
  #         languages: python
  #     - uses: github/codeql-action/analyze@v3
